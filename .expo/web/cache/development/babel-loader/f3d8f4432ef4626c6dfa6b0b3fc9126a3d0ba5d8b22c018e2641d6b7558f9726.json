{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { storage } from \"../config/firebase\";\nimport { ref, uploadBytes, getDownloadURL, deleteObject } from \"firebase/storage\";\nexport function salvarImagem(_x, _x2) {\n  return _salvarImagem.apply(this, arguments);\n}\nfunction _salvarImagem() {\n  _salvarImagem = _asyncToGenerator(function* (imagem, imagemNome) {\n    if (!imagem) return;\n    var downloadsImagem = yield fetch(imagem);\n    var blobImagem = yield downloadsImagem.blob();\n    var imagemRef = ref(storage, `posts/${imagemNome}.png`);\n    try {\n      yield uploadBytes(imagemRef, blobImagem);\n      var url = yield getDownloadURL(imagemRef);\n      return url;\n    } catch (error) {\n      console.log(error);\n      return null;\n    }\n  });\n  return _salvarImagem.apply(this, arguments);\n}\nexport function deletarImagem(_x3) {\n  return _deletarImagem.apply(this, arguments);\n}\nfunction _deletarImagem() {\n  _deletarImagem = _asyncToGenerator(function* (idImagem) {\n    var refStorage = ref(storage, `posts/${idImagem}.png`);\n    try {\n      yield deleteObject(refStorage);\n      return true;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  });\n  return _deletarImagem.apply(this, arguments);\n}","map":{"version":3,"names":["storage","ref","uploadBytes","getDownloadURL","deleteObject","salvarImagem","_x","_x2","_salvarImagem","apply","arguments","_asyncToGenerator","imagem","imagemNome","downloadsImagem","fetch","blobImagem","blob","imagemRef","url","error","console","log","deletarImagem","_x3","_deletarImagem","idImagem","refStorage"],"sources":["C:/Users/Lab71/Downloads/projeto/src/servicos/storage.js"],"sourcesContent":["import { storage } from \"../config/firebase\";\nimport { ref, uploadBytes, getDownloadURL, deleteObject } from \"firebase/storage\";\n\nexport async function salvarImagem(imagem, imagemNome) {\n    if (!imagem) return;\n    const downloadsImagem = await fetch(imagem)\n    const blobImagem = await downloadsImagem.blob()\n    const imagemRef = ref(storage, `posts/${imagemNome}.png`)\n\n    try {\n       await uploadBytes(imagemRef, blobImagem)\n        const url = await getDownloadURL(imagemRef)\n        return url\n    } catch (error) {\n        console.log(error)\n        return null\n    }\n}\n\nexport async function deletarImagem(idImagem){\n    const refStorage = ref(storage, `posts/${idImagem}.png`)\n    try {\n        await deleteObject(refStorage)\n        return true\n    } catch (error) {\n      console.log(error)\n      return false  \n    }\n}"],"mappings":";AAAA,SAASA,OAAO;AAChB,SAASC,GAAG,EAAEC,WAAW,EAAEC,cAAc,EAAEC,YAAY,QAAQ,kBAAkB;AAEjF,gBAAsBC,YAAYA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,aAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAcjC,SAAAF,cAAA;EAAAA,aAAA,GAAAG,iBAAA,CAdM,WAA4BC,MAAM,EAAEC,UAAU,EAAE;IACnD,IAAI,CAACD,MAAM,EAAE;IACb,IAAME,eAAe,SAASC,KAAK,CAACH,MAAM,CAAC;IAC3C,IAAMI,UAAU,SAASF,eAAe,CAACG,IAAI,EAAE;IAC/C,IAAMC,SAAS,GAAGjB,GAAG,CAACD,OAAO,EAAG,SAAQa,UAAW,MAAK,CAAC;IAEzD,IAAI;MACD,MAAMX,WAAW,CAACgB,SAAS,EAAEF,UAAU,CAAC;MACvC,IAAMG,GAAG,SAAShB,cAAc,CAACe,SAAS,CAAC;MAC3C,OAAOC,GAAG;IACd,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,OAAO,IAAI;IACf;EACJ,CAAC;EAAA,OAAAZ,aAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsBa,aAAaA,CAAAC,GAAA;EAAA,OAAAC,cAAA,CAAAhB,KAAA,OAAAC,SAAA;AAAA;AASlC,SAAAe,eAAA;EAAAA,cAAA,GAAAd,iBAAA,CATM,WAA6Be,QAAQ,EAAC;IACzC,IAAMC,UAAU,GAAG1B,GAAG,CAACD,OAAO,EAAG,SAAQ0B,QAAS,MAAK,CAAC;IACxD,IAAI;MACA,MAAMtB,YAAY,CAACuB,UAAU,CAAC;MAC9B,OAAO,IAAI;IACf,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,OAAO,KAAK;IACd;EACJ,CAAC;EAAA,OAAAK,cAAA,CAAAhB,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}